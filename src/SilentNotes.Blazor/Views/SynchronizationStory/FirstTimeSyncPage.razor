@attribute [Route(RouteNames.FirstTimeSync)]
@inherits PageBase

@using SilentNotes.Models
@using SilentNotes.ViewModels
@using SilentNotes.Services

@inject ILanguageService LanguageService
@inject ISvgIconService IconService
@inject IJSRuntime JSRuntime
@inject INavigationService Navigation

@* Main menu *@
<MudAppBar Class="flex-none" Fixed="false" Dense="true" WrapContent="false">
	<MudIconButton OnClick="@(() => Navigation.NavigateTo(BackRoute))" Icon="@IconService[IconNames.ArrowLeft]" Color="Color.Inherit" Class="mr-5" title="@LanguageService["back"]" Edge="Edge.Start" />
</MudAppBar>

@* body *@
<div id="content" class="flex-1 px-1 py-3">
	<MudContainer Class="ms-0" MaxWidth="MaxWidth.Medium">
		<h1 class="h-colored">@LanguageService["cloud_first_synchronization_title"]</h1>

		<p class="my-4">@LanguageService["cloud_first_synchronization_text"]</p>

		<MudStack Class="my-4" Row="true" Justify="Justify.FlexEnd" Spacing="1">
			<MudButton OnClick="@(() => ViewModel.CancelCommand.Execute(null))" Color="Color.Default" Variant="Variant.Filled">@LanguageService["cancel"]</MudButton>
			<MudButton @ref="_continueButton" OnClick="@(() => ViewModel.ContinueCommand.Execute(null))" Color="Color.Primary" Variant="Variant.Filled">@LanguageService["continue"]</MudButton>
		</MudStack>
	</MudContainer>
</div>

	@code {
	private MudBaseButton _continueButton;

	protected override void OnInitialized()
	{
		BackRoute = RouteNames.NoteRepository;
		ViewModel = new FirstTimeSyncViewModel(Ioc.Instance);
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await KeyboardShortcuts.InitializeAsync(JSRuntime);
			KeyboardShortcuts
				.AddShortcut(new SnKeyboardShortcut(SnKey.Escape), () => Navigation.NavigateTo(BackRoute))
				.AddShortcut(new SnKeyboardShortcut(SnKey.Enter), async () => await SnKeyboardShortcuts.SimulateClickAsync(_continueButton));
		}
	}

	private FirstTimeSyncViewModel ViewModel { get; set; }
}